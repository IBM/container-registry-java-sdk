/*
 * (C) Copyright IBM Corp. 2023.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 */
package com.ibm.cloud.container_registry.vulnerability_advisor.v4.model;

import com.google.gson.annotations.SerializedName;
import com.ibm.cloud.sdk.core.service.model.GenericModel;

/**
 * ScanreportSummary.
 */
public class ScanreportSummary extends GenericModel {

  @SerializedName("configuration_issue_count")
  protected Long configurationIssueCount;
  @SerializedName("exempt_configuration_issue_count")
  protected Long exemptConfigurationIssueCount;
  @SerializedName("exempt_issue_count")
  protected Long exemptIssueCount;
  @SerializedName("exempt_vulnerability_count")
  protected Long exemptVulnerabilityCount;
  @SerializedName("issue_count")
  protected Long issueCount;
  @SerializedName("scan_time")
  protected Long scanTime;
  protected String status;
  @SerializedName("vulnerability_count")
  protected Long vulnerabilityCount;

  protected ScanreportSummary() { }

  /**
   * Gets the configurationIssueCount.
   *
   * Not supported, this will always be zero.
   *
   * @return the configurationIssueCount
   */
  public Long getConfigurationIssueCount() {
    return configurationIssueCount;
  }

  /**
   * Gets the exemptConfigurationIssueCount.
   *
   * Not supported, this will always be zero.
   *
   * @return the exemptConfigurationIssueCount
   */
  public Long getExemptConfigurationIssueCount() {
    return exemptConfigurationIssueCount;
  }

  /**
   * Gets the exemptIssueCount.
   *
   * The number of exempt issues found.
   *
   * @return the exemptIssueCount
   */
  public Long getExemptIssueCount() {
    return exemptIssueCount;
  }

  /**
   * Gets the exemptVulnerabilityCount.
   *
   * The number of exempt vulnerability issues found.
   *
   * @return the exemptVulnerabilityCount
   */
  public Long getExemptVulnerabilityCount() {
    return exemptVulnerabilityCount;
  }

  /**
   * Gets the issueCount.
   *
   * The number of issues found.
   *
   * @return the issueCount
   */
  public Long getIssueCount() {
    return issueCount;
  }

  /**
   * Gets the scanTime.
   *
   * The last time that the vulnerability data source was checked for vulnerabilities as a UNIX timestamp.
   *
   * @return the scanTime
   */
  public Long getScanTime() {
    return scanTime;
  }

  /**
   * Gets the status.
   *
   * Overall vulnerability assessment status: OK, WARN, FAIL, UNSUPPORTED, INCOMPLETE, UNSCANNED. For more information
   * about these status codes, see
   * https://{DomainName}/apidocs/container-registry/va#getting-started-vulnerability-report-status-codes.
   *
   * @return the status
   */
  public String getStatus() {
    return status;
  }

  /**
   * Gets the vulnerabilityCount.
   *
   * The number of vulnerability issues found.
   *
   * @return the vulnerabilityCount
   */
  public Long getVulnerabilityCount() {
    return vulnerabilityCount;
  }
}

