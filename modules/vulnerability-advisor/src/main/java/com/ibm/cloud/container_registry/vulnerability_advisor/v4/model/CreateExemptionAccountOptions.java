/*
 * (C) Copyright IBM Corp. 2023.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 */
package com.ibm.cloud.container_registry.vulnerability_advisor.v4.model;

import com.ibm.cloud.sdk.core.service.model.GenericModel;

/**
 * The createExemptionAccount options.
 */
public class CreateExemptionAccountOptions extends GenericModel {

  protected String issueType;
  protected String issueId;

  /**
   * Builder.
   */
  public static class Builder {
    private String issueType;
    private String issueId;

    /**
     * Instantiates a new Builder from an existing CreateExemptionAccountOptions instance.
     *
     * @param createExemptionAccountOptions the instance to initialize the Builder with
     */
    private Builder(CreateExemptionAccountOptions createExemptionAccountOptions) {
      this.issueType = createExemptionAccountOptions.issueType;
      this.issueId = createExemptionAccountOptions.issueId;
    }

    /**
     * Instantiates a new builder.
     */
    public Builder() {
    }

    /**
     * Instantiates a new builder with required properties.
     *
     * @param issueType the issueType
     * @param issueId the issueId
     */
    public Builder(String issueType, String issueId) {
      this.issueType = issueType;
      this.issueId = issueId;
    }

    /**
     * Builds a CreateExemptionAccountOptions.
     *
     * @return the new CreateExemptionAccountOptions instance
     */
    public CreateExemptionAccountOptions build() {
      return new CreateExemptionAccountOptions(this);
    }

    /**
     * Set the issueType.
     *
     * @param issueType the issueType
     * @return the CreateExemptionAccountOptions builder
     */
    public Builder issueType(String issueType) {
      this.issueType = issueType;
      return this;
    }

    /**
     * Set the issueId.
     *
     * @param issueId the issueId
     * @return the CreateExemptionAccountOptions builder
     */
    public Builder issueId(String issueId) {
      this.issueId = issueId;
      return this;
    }
  }

  protected CreateExemptionAccountOptions() { }

  protected CreateExemptionAccountOptions(Builder builder) {
    com.ibm.cloud.sdk.core.util.Validator.notEmpty(builder.issueType,
      "issueType cannot be empty");
    com.ibm.cloud.sdk.core.util.Validator.notEmpty(builder.issueId,
      "issueId cannot be empty");
    issueType = builder.issueType;
    issueId = builder.issueId;
  }

  /**
   * New builder.
   *
   * @return a CreateExemptionAccountOptions builder
   */
  public Builder newBuilder() {
    return new Builder(this);
  }

  /**
   * Gets the issueType.
   *
   * Exemption type, e.g. 'cve' or 'sn' or 'configuration'. See /va/api/v4/exempt/types for more details.
   *
   * @return the issueType
   */
  public String issueType() {
    return issueType;
  }

  /**
   * Gets the issueId.
   *
   * Exemption ID, e.g. 'CVE-2018-9999'. See /va/api/v4/exempt/types for more details.
   *
   * @return the issueId
   */
  public String issueId() {
    return issueId;
  }
}

